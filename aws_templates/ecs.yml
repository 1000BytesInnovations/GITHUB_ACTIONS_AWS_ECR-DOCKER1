Metadata:
  TemplateId: "arn:aws:cloudformation:us-east-1:937823852955:generatedTemplate/1dd9f582-a38f-4bfd-ac3f-e39fd53f93d5"
Resources:
  #ECSClusterCapacityProviderAssociations00abx00I2Olu:
    #UpdateReplacePolicy: "Retain"
    #Type: "AWS::ECS::ClusterCapacityProviderAssociations"
    #DeletionPolicy: "Delete"
    #Properties:
      #CapacityProviders:
      #- "FARGATE"
      #- "FARGATE_SPOT"
      #Cluster: "abx"
      #DefaultCapacityProviderStrategy: []
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: abx
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
  ECSTaskDefinition00taskdefinitiondbtpipeline100ugntg:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ECS::TaskDefinition"
    DeletionPolicy: "Delete"
    Properties:
      TaskRoleArn: arn:aws:iam::937823852955:role/vk_ecs_role
      InferenceAccelerators: []
      Memory: "512"
      PlacementConstraints: []
      Cpu: "256"
      RequiresCompatibilities:
      - "FARGATE"
      NetworkMode: "awsvpc"
      ExecutionRoleArn: arn:aws:iam::937823852955:role/vk_ecs_role
      RuntimePlatform:
        OperatingSystemFamily: "LINUX"
        CpuArchitecture: "X86_64"
      Volumes: []
      ContainerDefinitions:
      - ExtraHosts: []
        Secrets: []
        VolumesFrom: []
        Cpu: 0
        EntryPoint: []
        DnsServers: []
        Image: "937823852955.dkr.ecr.us-east-1.amazonaws.com/viv:latest"
        Essential: true
        LogConfiguration:
          SecretOptions: []
          Options:
            awslogs-group: "/ecs/dbt_pipeline"
            awslogs-create-group: "true"
            awslogs-region: "us-east-1"
            awslogs-stream-prefix: "ecs"
          LogDriver: "awslogs"
        ResourceRequirements: []
        EnvironmentFiles: []
        Name: "dbt"
        MountPoints: []
        DependsOn: []
        DockerLabels: {}
        PortMappings:
        - ContainerPort: 80
          AppProtocol: "http"
          Protocol: "tcp"
          HostPort: 80
          Name: "dbt-80-tcp"
        DockerSecurityOptions: []
        SystemControls: []
        Command: []
        DnsSearchDomains: []
        Environment: []
        Links: []
        CredentialSpecs: []
        Ulimits: []
      Family: "dbt_pipeline"
      Tags: []

      
