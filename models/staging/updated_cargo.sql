-- dbt model: landing_table.sql
{{ config(materialized='table') }}
WITH base AS (
    SELECT *,
        CASE
            WHEN OPERATING_AIRLINE_IATA_CODE IS NULL THEN OPERATING_AIRLINE
            ELSE OPERATING_AIRLINE_IATA_CODE
        END AS OPERATING_AIRLINE_IATA_CODE_TMP,
        CASE
            WHEN PUBLISHED_AIRLINE_IATA_CODE IS NULL THEN PUBLISHED_AIRLINE
            ELSE PUBLISHED_AIRLINE_IATA_CODE
        END AS PUBLISHED_AIRLINE_IATA_CODE_TMP
    FROM {{ ref('flatten_cargo') }}
),

updated AS (
    SELECT base.*,
        COALESCE(base.OPERATING_AIRLINE_IATA_CODE_TMP, agg_op.OPERATING_AIRLINE_IATA_CODE) AS NEW_OPERATING_AIRLINE_IATA_CODE,
        COALESCE(base.PUBLISHED_AIRLINE_IATA_CODE_TMP, agg_pub.PUBLISHED_AIRLINE_IATA_CODE) AS NEW_PUBLISHED_AIRLINE_IATA_CODE
    FROM base
    LEFT JOIN (
        SELECT OPERATING_AIRLINE, OPERATING_AIRLINE_IATA_CODE
        FROM base
        WHERE OPERATING_AIRLINE_IATA_CODE IS NOT NULL
        GROUP BY OPERATING_AIRLINE, OPERATING_AIRLINE_IATA_CODE
    ) agg_op
    ON base.OPERATING_AIRLINE = agg_op.OPERATING_AIRLINE
    LEFT JOIN (
        SELECT PUBLISHED_AIRLINE, PUBLISHED_AIRLINE_IATA_CODE
        FROM base
        WHERE PUBLISHED_AIRLINE_IATA_CODE IS NOT NULL
        GROUP BY PUBLISHED_AIRLINE, PUBLISHED_AIRLINE_IATA_CODE
    ) agg_pub
    ON base.PUBLISHED_AIRLINE = agg_pub.PUBLISHED_AIRLINE
)

SELECT ACTIVITY_PERIOD,
ACTIVITY_PERIOD_START_DATE,
ACTIVITY_TYPE_CODE,
CARGO_AIRCRAFT_TYPE,
CARGO_METRIC_TONS,
CARGO_TYPE_CODE,
CARGO_WEIGHT_LBS,
DATA_AS_OF,
DATA_LOADED_AT,
GEO_REGION,
GEO_SUMMARY,
OPERATING_AIRLINE,
updated.NEW_PUBLISHED_AIRLINE_IATA_CODE AS PUBLISHED_AIRLINE_IATA_CODE,
PUBLISHED_AIRLINE,
updated.NEW_OPERATING_AIRLINE_IATA_CODE AS OPERATING_AIRLINE_IATA_CODE
FROM updated


